# sig/tomorrow_io_api.rbs

class TomorrowIoApi
  BASE_URL: String
  FIELDS: Array[String]
  UNITS: String
  TIME_STEPS: Array[String]
  START_TIME: String
  END_TIME: String
  MAX_RETRIES: Integer
  LAT_LON_PRECISION: Integer

  def get_parsed_weather_timeline_for: (latitude: Float, longitude: Float) -> Hash[Symbol, untyped]?

  private
  def fetch_api_key: () -> String
  def log_error: (message: String, error: StandardError) -> void
  def cache_key: (latitude: Float, longitude: Float) -> String
  def send_request: (location: String, api_key: String) -> Net::HTTPResponse?
  def build_request: (uri: URI, location: String) -> Net::HTTP::Post
  def configure_http: (http: Net::HTTP::Persistent) -> void
  def handle_rate_limiting: (response: Net::HTTPResponse) -> void
  def request_body: (location: String) -> Hash[Symbol, untyped]
  def process_response: (response: Net::HTTPResponse?) -> Hash[Symbol, untyped]?
  def log_no_response: () -> nil
  def log_invalid_response: (response: Net::HTTPResponse) -> nil
  def parse_valid_response: (response: Net::HTTPResponse) -> Hash[Symbol, untyped]?
  def decompress_response: (response: Net::HTTPResponse) -> String
  def parse_response: (raw_timeline: String) -> Hash[Symbol, untyped]?
end
