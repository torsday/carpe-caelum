# sig/weather_repository.rbs

class WeatherRepository
  attr_accessor redis_client: untyped
  attr_accessor latitude_longitude_precision: Integer
  attr_accessor tomorrow_io_wrapper: untyped

  def initialize: (redis_client: untyped, tomorrow_io_wrapper: untyped, latitude_longitude_precision: Integer) -> void
  def current_feels_like_temperature_for: (latitude: Float, longitude: Float) -> Float
  def current_conditions_for: (latitude: Float, longitude: Float) -> String
  def feels_like_high_and_low_for: (latitude: Float, longitude: Float, window_in_hours: Integer) -> Hash[Symbol, Float?]

  private
  def build_snapshot_collection: (latitude: Float, longitude: Float, window_in_hours: Integer) -> WeatherSnapshotCollection
  def snapshot_for: (latitude: Float, longitude: Float, utc: Time) -> WeatherSnapshot
  def query_external_api_for_weather_snapshot: (latitude: Float, longitude: Float, _utc: Time) -> WeatherSnapshot
  def tomorrow_io_timeline_redis_key: (latitude: Float, longitude: Float, utc: Time) -> String
  def current_utc_rounded_down: () -> Time
  def validate_coordinates: (latitude: Float, longitude: Float) -> void
  def validate_utc: (utc: Time) -> void
  def validate_window_in_hours: (window_in_hours: Integer) -> void
  def log_error: (method: String, error: StandardError) -> void
end
